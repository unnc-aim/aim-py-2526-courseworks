name: CI

on:
  push:
    branches: [main, develop]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Detect changed files and enforce main.py-only (compare with latest origin/main)
        shell: bash
        run: |
          set -eo pipefail

          # fetch the latest main from origin
          git fetch --no-tags --prune --depth=1 origin main >/dev/null 2>&1 || true
          BASE_REF="origin/main"

          CHANGED_FILES="$(git diff --name-only ${BASE_REF}...HEAD || true)"
          echo "# Tests" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "## Files changed" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          if [ -z "${CHANGED_FILES}" ]; then
            echo "No changed files detected; nothing to check." >> "$GITHUB_STEP_SUMMARY"
            exit 0
          else
            echo '```' >> "$GITHUB_STEP_SUMMARY"
            printf '%s\n' "${CHANGED_FILES}" | awk 'NR==1 && NF==0{next} {print}' >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
          fi

          DISALLOWED_LIST=()
          for f in ${CHANGED_FILES}; do
            if [ "${f}" != "main.py" ]; then
              DISALLOWED_LIST+=("${f}")
            fi
          done

          if [ ${#DISALLOWED_LIST[@]} -gt 0 ]; then
            echo "### Disallowed modifications" >> "$GITHUB_STEP_SUMMARY"
            echo 'The workflow only permits changes to `main.py`, but disallowed modification(s) detected in these files:' >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
            printf '%s\n' "${DISALLOWED_LIST[@]}" >> "$GITHUB_STEP_SUMMARY"
            echo '```' >> "$GITHUB_STEP_SUMMARY"
            echo "❌ Disallowed modification(s) detected." >> "$GITHUB_STEP_SUMMARY"
            printf 'Disallowed modification(s) detected: %s\n' "${DISALLOWED_LIST[*]}" >&2
            exit 1
          else 
            echo "- Status: ✅ Passed" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install autopep8 pytest

      - name: Run checks and write job summary
        shell: bash
        run: |
          set -eo pipefail

          # helper: append a titled block to the GitHub Actions job summary
          append_summary() {
            local title="$1"
            local status="$2"
            local file="$3"
            echo "## ${title}" >> "$GITHUB_STEP_SUMMARY"
            echo "- Status: ${status}" >> "$GITHUB_STEP_SUMMARY"
            if [ -n "${file}" ] && [ -s "${file}" ]; then
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo '```' >> "$GITHUB_STEP_SUMMARY"
              sed -n '1,500p' "${file}" >> "$GITHUB_STEP_SUMMARY"
              echo '```' >> "$GITHUB_STEP_SUMMARY"
            fi
            echo '' >> "$GITHUB_STEP_SUMMARY"
          }

          FAIL=0

          # (Changed-files check already performed earlier.)

          # Syntax check
          SYNTAX_OUT="/tmp/syntax.txt"
          python -m py_compile main.py 2>"${SYNTAX_OUT}" || true
          if [ -s "${SYNTAX_OUT}" ]; then
            append_summary "Syntax check" "❌ Failed" "${SYNTAX_OUT}"
            FAIL=1
          else
            append_summary "Syntax check" "✅ Passed"
            rm -f "${SYNTAX_OUT}"
          fi

          # autopep8 style diff
          APEP8_OUT="/tmp/autopep8.txt"
          autopep8 --diff main.py >"${APEP8_OUT}" || true
          if [ -s "${APEP8_OUT}" ]; then
            append_summary "autopep8 (style)" "❌ Issues" "${APEP8_OUT}"
            FAIL=1
          else
            append_summary "autopep8 (style)" "✅ Passed" "${APEP8_OUT}"
            rm -f "${APEP8_OUT}"
          fi

          # pytest
          PYTEST_OUT="/tmp/pytest.txt"
          if [ -d tests ]; then
            pytest -q tests/ >"${PYTEST_OUT}" 2>&1 || true
            if [ -s "${PYTEST_OUT}" ] && grep -Eqi 'failed|error|FAILED|ERROR' "${PYTEST_OUT}" 2>/dev/null; then
              append_summary "pytest" "❌ See details" "${PYTEST_OUT}"
              FAIL=1
            else
              append_summary "pytest" "✅ Passed" "${PYTEST_OUT}"
              rm -f "${PYTEST_OUT}"
            fi
          else
            append_summary "pytest" "⏭️ Skipped (no tests/ directory)"
          fi

          SUBMIT_URL="https://github.com"
          RUN_URL="${GITHUB_SERVER_URL:-https://github.com}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

          # determine current branch name (fallback if GITHUB_REF_NAME not set)
          CURRENT_BRANCH="${GITHUB_REF_NAME:-${GITHUB_REF#refs/heads/}}"

          if [ "${FAIL}" -ne 0 ]; then
            echo "## ❌ One or more checks failed. See job summary above for details." >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "If you want to give up, you may copy [this link (hover and copy link)](${RUN_URL}) and submit it together with your name, student ID, and school email to our assignment questionnaire:" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "- <${SUBMIT_URL}>" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "Otherwise keep trying ;)" >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "Action run URL: ${RUN_URL}"
            exit 1
          else
            if [ "${CURRENT_BRANCH}" = "main" ]; then
              echo "## 🎉 All checks passed." >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "# Submission" >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "Please copy [this link (hover and copy link)](${RUN_URL}) and submit it together with your name, student ID, and school email to our assignment questionnaire:" >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "- <${SUBMIT_URL}>" >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "Action run URL: ${RUN_URL}"
              exit 0
            else
              echo "## ✅ All checks passed on branch: ${CURRENT_BRANCH}" >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "Note: runs on non-main branches will not be considered final submissions. If you need the final result, please merge into the main branch and view the run on the main branch." >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "Action run URL: ${RUN_URL}" >> "$GITHUB_STEP_SUMMARY"
              exit 0
            fi
          fi
